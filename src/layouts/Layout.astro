---
import Footer from "../components/Footer/Footer.astro";
import Header from "../components/Header/Header.astro";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en" class="relative">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Charmonman:wght@400;700&family=Italianno&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Onest:wght@100..900&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
    <script>
      if (
        localStorage.getItem("theme") === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </head>
  <body class="bg-[#f7f7f7] dark:bg-zinc-900 text-zinc-900 dark:text-[#f7f7f7]">
    <div
      id="header"
      class="absolute inset-0 -z-20 h-full w-full bg-[transparent] bg-[linear-gradient(to_right,#00000020_1px,transparent_1px),linear-gradient(to_bottom,#00000020_1px,transparent_1px)] dark:bg-[linear-gradient(to_right,#f7f7f705_2px,transparent_1px),linear-gradient(to_bottom,#f7f7f705_2px,transparent_1px)] bg-[size:6rem_4rem] md:bg-[size:8rem_6rem]"
    >
      <div
        class="absolute bottom-0 left-0 right-0 top-0 bg-[radial-gradient(circle_1000px_at_100%_0px,#ffcf0080,transparent)] dark:bg-[radial-gradient(circle_1000px_at_100%_0px,#ffd00050,transparent)]"
      >
      </div>
    </div>
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  html {
    font-family: "Onest", system-ui, sans-serif;
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
  }

  .radient-animation {
    display: inline;
    font-style: normal;
    background: linear-gradient(
      89.81deg,
      #fcd785 -1.72%,
      #8f6e28 54.05%,
      #ffae00 99.78%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient 4s ease infinite;
  }

  html.dark .radient-animation {
    display: inline;
    font-style: normal;
    background: linear-gradient(
      89.81deg,
      #ffae00 -1.72%,
      #fff567 54.05%,
      #ffae00 99.78%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient 4s ease infinite;
  }

  @keyframes gradient {
    0% {
      background-position: 0% 100%;
    }

    50% {
      background-position: 100% 0%;
    }
    100% {
      background-position: 0% 100%;
    }
  }

  .hamburger {
    padding: 15px 15px;
    cursor: pointer;
    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-timing-function: linear;
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
  }
  .hamburger:hover {
    opacity: 0.7;
  }
  .hamburger.is-active:hover {
    opacity: 0.7;
  }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: #f8ec00b4;
  }

  .hamburger-box {
    width: 40px;
    height: 24px;
    display: inline-block;
    position: relative;
  }

  .hamburger-inner {
    display: block;
    top: 50%;
    margin-top: -2px;
  }
  .hamburger-inner,
  .hamburger-inner::before,
  .hamburger-inner::after {
    width: 40px;
    height: 4px;
    background: linear-gradient(
      89.81deg,
      #f8ec00 -1.72%,
      rgb(255, 183, 0) 54.05%,
      #f8ec00 99.78%
    );
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
    animation: gradient 4s ease infinite;
  }
  .hamburger-inner::before,
  .hamburger-inner::after {
    content: "";
    display: block;
  }
  .hamburger-inner::before {
    top: -10px;
  }
  .hamburger-inner::after {
    bottom: -10px;
  }
  .hamburger--vortex-r .hamburger-inner {
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
  }
  .hamburger--vortex-r .hamburger-inner::before,
  .hamburger--vortex-r .hamburger-inner::after {
    transition-duration: 0s;
    transition-delay: 0.1s;
    transition-timing-function: linear;
  }
  .hamburger--vortex-r .hamburger-inner::before {
    transition-property: top, opacity;
  }
  .hamburger--vortex-r .hamburger-inner::after {
    transition-property: bottom, transform;
  }

  .hamburger--vortex-r.is-active .hamburger-inner {
    transform: rotate(-765deg);
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
  }
  .hamburger--vortex-r.is-active .hamburger-inner::before,
  .hamburger--vortex-r.is-active .hamburger-inner::after {
    transition-delay: 0s;
  }
  .hamburger--vortex-r.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0;
  }
  .hamburger--vortex-r.is-active .hamburger-inner::after {
    bottom: 0;
    transform: rotate(-90deg);
  }

  @keyframes strokeDark {
    0% {
      fill: rgba(72, 138, 20, 0);
      stroke: rgb(255, 204, 0);
      stroke-dashoffset: 25%;
      stroke-dasharray: 0 50%;
      stroke-width: 2;
      opacity: . 1;
    }
    70% {
      fill: rgba(72, 138, 20, 0);
      stroke: rgba(254, 240, 138, 1);
      opacity: 0.4;
    }
    80% {
      fill: rgba(72, 138, 20, 0);
      stroke: rgb(255, 204, 0);
      stroke-width: 3;
      opacity: 0.7;
    }
    100% {
      fill: rgba(72, 138, 20, 0);
      stroke: rgba(54, 95, 160, 0);
      stroke-dashoffset: -25%;
      stroke-dasharray: 50% 0;
      stroke-width: 0;
      opacity: 0.2;
    }
  }
  @keyframes strokeLight {
    0% {
      fill: rgba(72, 138, 20, 0);
      stroke: #000000;
      stroke-dashoffset: 25%;
      stroke-dasharray: 0 50%;
      stroke-width: 2;
      opacity: . 1;
    }
    70% {
      fill: rgba(72, 138, 20, 0);
      stroke: #000000;
      opacity: 0.4;
    }
    80% {
      fill: rgba(72, 138, 20, 0);
      stroke: #000000;
      stroke-width: 3;
      opacity: 0.7;
    }
    100% {
      fill: rgba(72, 138, 20, 0);
      stroke: #000000;
      stroke-dashoffset: -25%;
      stroke-dasharray: 50% 0;
      stroke-width: 0;
      opacity: 0.2;
    }
  }
</style>
